{"version":3,"sources":["constants.js","serviceWorker.js","reducers/user.js","reducers/notifications.js","reducers/index.js","actions/actions.js","components/notification/notification.js","App.js","components/home/home.js","components/login/login.js","index.js","Store.js"],"names":["module","exports","REGISTER","NEW_USER","EXISTING_USER","GET_USER_DATA","SET_USER_DATA","SUCCESS","ERROR","RESET","LOGOUT","GET_TOKEN","Boolean","window","location","hostname","match","INITIAL_STATE","user","isRegistered","token","response","error","rootReducer","combineReducers","state","arguments","length","undefined","payload","type","Object","objectSpread","data","sessionStorage","getItem","JSON","parse","console","log","setItem","stringify","removeItem","notifications","verify","dispatch","axios","post","concat","then","catch","err","status","alertError","setTimeout","reset","login","register","alertSuccess","getUserData","getState","get","headers","Authorization","getToken","logout","Notification","this","props","react_default","a","createElement","className","msg","Component","connect","action","bindActionCreators","Actions","App","react_router","to","pathname","notification_notification","Home","_this","style","textAlign","name","email","onClick","Login","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","emailRe","RegExp","passRe","username","mobileNumber","password","otp","ev","_this2","preventDefault","setState","test","_this3","passOrPin","placeholder","required","onChange","target","value","min","max","onSubmit","onFormSubmit","StoreInstance","createStore","applyMiddleware","thunk","routing","es","store","react_router_dom","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ea55f46.chunk.js","sourcesContent":["module.exports = {\n    REGISTER: \"REGISTER\",\n    NEW_USER: \"NEW_USER\",\n    EXISTING_USER: \"EXISTING_USER\",\n    GET_USER_DATA: \"GET_USER_DATA\",\n    SET_USER_DATA: \"SET_USER_DATA\",\n    SUCCESS: \"SUCCESS\",\n    ERROR: \"ERROR\",\n    RESET: \"RESET\",\n    LOGOUT: \"LOGOUT\",\n    GET_TOKEN: \"GET_TOKEN\"\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { REGISTER, NEW_USER, EXISTING_USER, GET_USER_DATA, SET_USER_DATA, LOGOUT, GET_TOKEN } from \"./../constants\";\r\n\r\nconst INITIAL_STATE = {\r\n    user: null,\r\n    isRegistered: null,\r\n    token: null\r\n}\r\n\r\nexport default (state = INITIAL_STATE, payload) => {\r\n    switch (payload.type) {\r\n        case REGISTER:\r\n            return {\r\n                user: payload.user\r\n            };\r\n\r\n        case GET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                user: payload.user\r\n            };\r\n\r\n        case GET_TOKEN:\r\n                const data = sessionStorage.getItem(\"user\");\r\n                const token = (data === null) ? null : JSON.parse(data).token;\r\n                return {\r\n                    ...state,\r\n                    token: token\r\n                };\r\n\r\n        case SET_USER_DATA:\r\n            console.log(SET_USER_DATA, payload.user);\r\n            sessionStorage.setItem(\"user\", JSON.stringify(payload.user));\r\n            return {\r\n                ...state,\r\n                token: payload.user.token,\r\n            };\r\n\r\n        case LOGOUT:\r\n            sessionStorage.removeItem(\"user\");\r\n            return {\r\n                user: null,\r\n                isRegistered: null,\r\n                token: null\r\n            };\r\n\r\n        case NEW_USER:\r\n            console.log(NEW_USER, payload);\r\n            return {\r\n                ...state,\r\n                isRegistered: payload.error.isRegistered\r\n            };\r\n\r\n        case EXISTING_USER:\r\n            console.log(EXISTING_USER, payload);\r\n            return {\r\n                ...state,\r\n                isRegistered: payload.data.isRegistered\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SUCCESS, ERROR, RESET } from \"./../constants\";\n\nconst INITIAL_STATE = {\n    response: null,\n    error: null\n}\n\nexport default (state = INITIAL_STATE, payload) => {\n    switch (payload.type) {\n        case SUCCESS:\n            console.log(payload);\n            return {\n                ...state,\n                response: payload.response\n            };\n\n        case ERROR:\n            return {\n                ...state,\n                error: payload.error\n            };\n\n        case RESET:\n            return {\n                response: null,\n                error: null\n            };\n\n        default:\n            return state;\n    }\n}","import user from \"./user\";\r\nimport notifications from \"./notifications\";\r\nimport {\r\n    combineReducers\r\n} from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n    notifications\r\n});\r\n\r\nexport default rootReducer;","import axios from 'axios';\r\nimport { NEW_USER, EXISTING_USER, GET_USER_DATA, SET_USER_DATA, SUCCESS, ERROR, RESET, LOGOUT, GET_TOKEN } from \"./../constants\";\r\nconst url = \"\";\r\n\r\nexport const verify = (data) => (dispatch) => {\r\n    return axios.post(`${url}/auth/verify`, data)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            dispatch({\r\n                type: EXISTING_USER,\r\n                data: response.data\r\n            });\r\n        }).catch(err => {\r\n            console.error(err.response);\r\n            if(err.response.status === 406){\r\n                dispatch({\r\n                    type: NEW_USER,\r\n                    error: err.response.data\r\n                });\r\n                dispatch(alertError(err.response.data));\r\n                setTimeout(() => dispatch(reset()), 2500);\r\n            }            \r\n        });\r\n}\r\n\r\nexport const login = (data) => (dispatch) => {\r\n    return axios.post(`${url}/auth/login`, data)\r\n        .then((response) => {\r\n            dispatch({\r\n                type: SET_USER_DATA,\r\n                user: response.data\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n            dispatch(alertError(err.response.data));\r\n            setTimeout(() => dispatch(reset()), 2500);\r\n        });\r\n}\r\n\r\nexport const register = (data) => (dispatch) => {\r\n    return axios.post(`${url}/auth/register`, data)\r\n        .then((response) => {\r\n            console.log(response.data)\r\n            dispatch(alertSuccess(response.data));\r\n            dispatch({\r\n                type: SET_USER_DATA,\r\n                user: response.data\r\n            });\r\n            setTimeout(() => dispatch(reset()), 2500);\r\n        }).catch(err => {\r\n            console.log(err)\r\n            dispatch(alertError(err.response.data));\r\n            setTimeout(() => dispatch(reset()), 2500);\r\n        });\r\n}\r\n\r\nexport const getUserData = () => (dispatch, getState) => {\r\n    const {\r\n        user\r\n    } = getState();\r\n    return axios.get(`${url}/user/details`, {\r\n            headers: {\r\n                \"Authorization\": user.token\r\n            }\r\n        })\r\n        .then((response) => {\r\n            dispatch({\r\n                type: GET_USER_DATA,\r\n                user: response.data\r\n            })\r\n        });\r\n}\r\n\r\nexport const alertSuccess = (response) => ({\r\n    type: SUCCESS,\r\n    response: response\r\n});\r\n\r\nexport const alertError = (error) => ({\r\n    type: ERROR,\r\n    error: error\r\n});\r\n\r\nexport const reset = () => ({\r\n    type: RESET\r\n});\r\n\r\nexport const getToken = () => ({\r\n    type: GET_TOKEN\r\n});\r\n\r\nexport const logout = () => ({\r\n    type: LOGOUT\r\n})","import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as Actions from \"../../actions/actions\";\nimport \"./notification.css\";\n\nclass Notification extends Component {\n\n  render() {\n    if(this.props.notifications.response){\n        return (\n            <div className=\"wrapper success\">\n                {this.props.notifications.response.msg}\n            </div>\n        );\n    }else if(this.props.notifications.error){\n        return (\n            <div className=\"wrapper error\">\n                {this.props.notifications.error.msg}\n            </div>\n        );\n    }else{\n        return null;\n    }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    notifications: state.notifications\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(Actions, dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Notification);\n","import React, {\n  Component\n} from \"react\";\nimport {\n  bindActionCreators\n} from \"redux\";\nimport {\n  connect\n} from \"react-redux\";\nimport * as Actions from \"./actions/actions\";\nimport {\n  Redirect\n} from \"react-router-dom\";\nimport Notification from \"./components/notification/notification\";\n\nclass App extends Component {\n\n  componentWillMount() {\n    this.props.action.getToken();\n  }\n\n  render() {\n    if (!this.props.user.token)\n      return (\n        <div>\n          <Notification />\n          <Redirect to={{pathname: '/login'}} />\n        </div>\n      )\n    else\n      return <Redirect to = {\n        {\n          pathname: '/home'\n        }\n      }\n    /> ;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(Actions, dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);","import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as Actions from \"../../actions/actions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Home extends Component {\n  componentDidMount() {\n    this.props.action.getUserData();\n  }\n\n  logout() {\n    this.props.action.logout();\n  }\n\n  render() {\n    if (this.props.token === null) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/login\"\n          }}\n        />\n      );\n    }\n\n    return (\n      <div className=\"container\">\n        <div style={{textAlign: \"center\"}}>\n          <h2>Welcome</h2>\n          <h1>{(this.props.user.user)? this.props.user.user.name : null}</h1>\n          <h5>{(this.props.user.user)? this.props.user.user.email : null}</h5>\n          <button onClick={() => this.logout()} className=\"btn btn-info\">Logout</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(Actions, dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./login.css\";\r\nimport * as Actions from \"../../actions/actions\";\r\n\r\nclass Login extends Component {  \r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.emailRe = new RegExp(\"^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$\");\r\n    this.passRe = new RegExp(\"[0-9].+\");\r\n\r\n    this.state = {\r\n      username: null,\r\n      name: null,\r\n      email: null,\r\n      mobileNumber: null,\r\n      password: null,\r\n      otp: null\r\n    };\r\n  }\r\n\r\n  onFormSubmit(ev) {\r\n    ev.preventDefault();\r\n    this.setState({\r\n      email: (this.emailRe.test(this.state.username))? this.state.username : this.state.email,\r\n      mobileNumber: (this.passRe.test(this.state.username))? this.state.username : this.state.mobileNumber\r\n    }, () => {\r\n      if ((this.state.email || this.state.mobileNumber) && !(this.state.password || this.state.otp)) {     \r\n        this.props.action.verify(this.state);\r\n      }else{\r\n        \r\n        if(this.state.email && this.state.password && this.state.mobileNumber && this.state.name){\r\n          this.props.action.register(this.state);\r\n        }else if ((this.state.email && this.state.password) || (this.state.mobileNumber && this.state.otp)) {\r\n          this.props.action.login(this.state);\r\n        }else{\r\n          this.props.action.alertError({\r\n            msg: \"Please enter valid input!\"\r\n          });\r\n          setTimeout(() => this.props.action.reset(), 2500);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let passOrPin = null;\r\n    if(this.state.username !== null && this.props.user.isRegistered !== null){\r\n      if(this.props.user.isRegistered){\r\n        passOrPin = (this.emailRe.test(this.state.username))? <input type=\"password\" className=\"input\" placeholder=\"Enter your password\" required\r\n                                                              onChange={ev =>\r\n                                                                this.setState({ password: ev.target.value })\r\n                                                              }\r\n                                                            /> : <input type=\"number\" className=\"input\" min=\"000000\" max=\"999999\" placeholder=\"Enter OTP\" required\r\n                                                              onChange={ev =>\r\n                                                                this.setState({ otp: ev.target.value })\r\n                                                              }\r\n                                                            />\r\n      }else{\r\n        passOrPin = (<div>\r\n                        {(this.emailRe.test(this.state.username))? <input type=\"text\" className=\"input\" placeholder=\"Enter mobile number\" required\r\n                                                                    onChange={ev => this.setState({ mobileNumber: ev.target.value })} /> : \r\n                                                                   <input type=\"email\" className=\"input\" placeholder=\"Enter email\" required\r\n                                                                    onChange={ev => this.setState({ email: ev.target.value })} />}\r\n                        <input type=\"password\" className=\"input\" placeholder=\"Enter your password\" required\r\n                          onChange={ev => this.setState({ password: ev.target.value })} /> \r\n                        <input type=\"name\" className=\"input\" placeholder=\"Enter your name\" required\r\n                          onChange={ev => this.setState({ name: ev.target.value })} />\r\n                    </div>);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"row full\">\r\n              <div className=\"col-sm-12 col-md-8 col-lg-6 box\">                \r\n                <h2>{(this.props.user.isRegistered === null || this.props.user.isRegistered !== false)? \"Login\" : \"Register\"}</h2>\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">                        \r\n                    <form onSubmit={ev => this.onFormSubmit(ev)}>\r\n                      <input\r\n                          type=\"text\"\r\n                          className=\"input\"\r\n                          placeholder=\"Enter email or mobile number\"\r\n                          required\r\n                          onChange={ev =>\r\n                            this.setState({ username: ev.target.value })\r\n                          }\r\n                        />\r\n\r\n                      {passOrPin}\r\n                        \r\n                      <div className=\"btn-holder\">\r\n                        <button type=\"submit\">\r\n                          >\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>              \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    action: bindActionCreators(Actions, dispatch)\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport { Provider } from \"react-redux\";\nimport Store from \"./Store\";\n\nimport { Route, HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport Home from \"./components/home/home\";\nimport Login from \"./components/login/login\";\nconst StoreInstance = Store();\n\nconst routing = (\n  <Provider store={StoreInstance}>\n    <HashRouter>\n      <div>\n        <Route path=\"/\" component={App} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/home\" component={Home} />\n        {/* <Route path=\"/quiz/:quiz_id\" component={Quiz} /> */}\n      </div>\n    </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {\r\n    createStore,\r\n    applyMiddleware\r\n} from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport default () => {\r\n    return createStore(rootReducer, applyMiddleware(thunk));\r\n}"],"sourceRoot":""}